{"ast":null,"code":"import _objectSpread from \"/var/www/html/ReactApp/React-Project/my-burger/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/var/www/html/ReactApp/React-Project/my-burger/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/ReactApp/React-Project/my-burger/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/html/ReactApp/React-Project/my-burger/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/html/ReactApp/React-Project/my-burger/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/html/ReactApp/React-Project/my-burger/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/var/www/html/ReactApp/React-Project/my-burger/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nvar INGREDIENT_PRICES = {\n  salad: 10,\n  cheese: 12,\n  meet: 20,\n  bacon: 10\n};\n\nvar BurgerBuilder =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BurgerBuilder, _Component);\n\n  function BurgerBuilder() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BurgerBuilder);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BurgerBuilder)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 40\n    };\n\n    _this.addIngredientHandler = function (type) {\n      var oldCount = _this.state.ingredients[type];\n      var updateCount = oldCount + 1;\n\n      var updateIngredients = _objectSpread({}, _this.state.ingredients);\n\n      updateIngredients[type] = updateCount;\n      var priceAddition = INGREDIENT_PRICES[type];\n      var oldPrice = _this.state.totalPrice;\n      var newPrice = oldPrice + priceAddition;\n\n      _this.setState({\n        totalPrice: newPrice,\n        ingredients: updateIngredients\n      });\n    };\n\n    _this.removeIngredientHandler = function (type) {\n      var oldCount = _this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      var updateCount = oldCount - 1;\n\n      var updateIngredients = _objectSpread({}, _this.state.ingredients);\n\n      updateIngredients[type] = updateCount;\n      var priceDeduction = INGREDIENT_PRICES[type];\n      var oldPrice = _this.state.totalPrice;\n      var newPrice = oldPrice - priceDeduction;\n\n      _this.setState({\n        totalPrice: newPrice,\n        ingredients: updateIngredients\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(BurgerBuilder, [{\n    key: \"render\",\n    value: function render() {\n      var disabledInfo = _objectSpread({}, this.state.ingredients);\n\n      for (var key in disabledInfo) {\n        disabledInfo[key] = disabledInfo[key] <= 0;\n      }\n\n      return React.createElement(Aux, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Burger, {\n        ingredients: this.state.ingredients,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(BuildControls, {\n        ingredientAdded: this.addIngredientHandler,\n        ingredientRemoved: this.removeIngredientHandler,\n        disabled: disabledInfo,\n        price: this.state.totalPrice,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return BurgerBuilder;\n}(Component);\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["/var/www/html/ReactApp/React-Project/my-burger/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","INGREDIENT_PRICES","salad","cheese","meet","bacon","BurgerBuilder","state","ingredients","meat","totalPrice","addIngredientHandler","type","oldCount","updateCount","updateIngredients","priceAddition","oldPrice","newPrice","setState","removeIngredientHandler","priceDeduction","disabledInfo","key"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,OAAOC,GAAP,MAAgB,eAAhB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,aAAP,MAA0B,qDAA1B;AAEA,IAAMC,iBAAiB,GAAG;AACtBC,EAAAA,KAAK,EAAE,EADe;AAEtBC,EAAAA,MAAM,EAAE,EAFc;AAGtBC,EAAAA,IAAI,EAAE,EAHgB;AAItBC,EAAAA,KAAK,EAAE;AAJe,CAA1B;;IAMMC,a;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,WAAW,EAAE;AACTN,QAAAA,KAAK,EAAE,CADE;AAETG,QAAAA,KAAK,EAAE,CAFE;AAGTF,QAAAA,MAAM,EAAE,CAHC;AAITM,QAAAA,IAAI,EAAE;AAJG,OADT;AAOJC,MAAAA,UAAU,EAAE;AAPR,K;;UAURC,oB,GAAuB,UAACC,IAAD,EAAU;AAC7B,UAAMC,QAAQ,GAAG,MAAKN,KAAL,CAAWC,WAAX,CAAuBI,IAAvB,CAAjB;AACA,UAAME,WAAW,GAAGD,QAAQ,GAAG,CAA/B;;AACA,UAAME,iBAAiB,qBAChB,MAAKR,KAAL,CAAWC,WADK,CAAvB;;AAGAO,MAAAA,iBAAiB,CAACH,IAAD,CAAjB,GAA0BE,WAA1B;AACA,UAAME,aAAa,GAAGf,iBAAiB,CAACW,IAAD,CAAvC;AACA,UAAMK,QAAQ,GAAG,MAAKV,KAAL,CAAWG,UAA5B;AACA,UAAMQ,QAAQ,GAAGD,QAAQ,GAAGD,aAA5B;;AACA,YAAKG,QAAL,CAAc;AACVT,QAAAA,UAAU,EAAEQ,QADF;AAEVV,QAAAA,WAAW,EAAEO;AAFH,OAAd;AAIH,K;;UACDK,uB,GAA0B,UAACR,IAAD,EAAU;AAChC,UAAMC,QAAQ,GAAG,MAAKN,KAAL,CAAWC,WAAX,CAAuBI,IAAvB,CAAjB;;AACA,UAAGC,QAAQ,IAAI,CAAf,EAAiB;AACb;AACH;;AACD,UAAMC,WAAW,GAAGD,QAAQ,GAAG,CAA/B;;AACA,UAAME,iBAAiB,qBAChB,MAAKR,KAAL,CAAWC,WADK,CAAvB;;AAGAO,MAAAA,iBAAiB,CAACH,IAAD,CAAjB,GAA0BE,WAA1B;AACA,UAAMO,cAAc,GAAGpB,iBAAiB,CAACW,IAAD,CAAxC;AACA,UAAMK,QAAQ,GAAG,MAAKV,KAAL,CAAWG,UAA5B;AACA,UAAMQ,QAAQ,GAAGD,QAAQ,GAAGI,cAA5B;;AACA,YAAKF,QAAL,CAAc;AACVT,QAAAA,UAAU,EAAEQ,QADF;AAEVV,QAAAA,WAAW,EAAEO;AAFH,OAAd;AAKH,K;;;;;;;6BACO;AACJ,UAAMO,YAAY,qBACX,KAAKf,KAAL,CAAWC,WADA,CAAlB;;AAGA,WAAI,IAAIe,GAAR,IAAeD,YAAf,EAA4B;AACxBA,QAAAA,YAAY,CAACC,GAAD,CAAZ,GAAoBD,YAAY,CAACC,GAAD,CAAZ,IAAqB,CAAzC;AACH;;AACD,aACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,WAAW,EAAE,KAAKhB,KAAL,CAAWC,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,aAAD;AACC,QAAA,eAAe,EAAE,KAAKG,oBADvB;AAEC,QAAA,iBAAiB,EAAE,KAAKS,uBAFzB;AAGC,QAAA,QAAQ,EAAEE,YAHX;AAIC,QAAA,KAAK,EAAE,KAAKf,KAAL,CAAWG,UAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AAUH;;;;EA9DuBb,S;;AAiE5B,eAAeS,aAAf","sourcesContent":["import React, {Component} from 'react';\n\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\n\nconst INGREDIENT_PRICES = {\n    salad: 10,\n    cheese: 12,\n    meet: 20,\n    bacon: 10\n}\nclass BurgerBuilder extends Component {\n    state = {\n        ingredients: {\n            salad: 0,\n            bacon: 0,\n            cheese: 0,\n            meat: 0\n        },\n        totalPrice: 40\n    }\n\n    addIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        const updateCount = oldCount + 1;\n        const updateIngredients = {\n            ...this.state.ingredients\n        };\n        updateIngredients[type] = updateCount;\n        const priceAddition = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice + priceAddition;\n        this.setState({\n            totalPrice: newPrice,\n            ingredients: updateIngredients\n        });\n    }\n    removeIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        if(oldCount <= 0){\n            return;\n        }\n        const updateCount = oldCount - 1;\n        const updateIngredients = {\n            ...this.state.ingredients\n        }\n        updateIngredients[type] = updateCount;\n        const priceDeduction = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice - priceDeduction;\n        this.setState({\n            totalPrice: newPrice,\n            ingredients: updateIngredients\n        });\n\n    }\n    render(){\n        const disabledInfo = {\n            ...this.state.ingredients\n        };\n        for(let key in disabledInfo){\n            disabledInfo[key] = disabledInfo[key] <= 0\n        }\n        return(\n            <Aux>\n                <Burger ingredients={this.state.ingredients}/>\n                <BuildControls\n                 ingredientAdded={this.addIngredientHandler}\n                 ingredientRemoved={this.removeIngredientHandler}\n                 disabled={disabledInfo}\n                 price={this.state.totalPrice} />\n            </Aux>\n        );\n    }\n}\n\nexport default BurgerBuilder;"]},"metadata":{},"sourceType":"module"}